import Head from "next/head";
import { useSession } from "next-auth/react";
import { useState, useEffect } from "react";
import { Navbar } from "@frontend/components/Nav";
import { UsernamePopup } from "@frontend/components/UsernamePopup";
import log from "@shared/logger";
import Link from "next/link";


export default function Friends() {
	const [userFriends, setData] = useState(null);
	const [isLoading, setLoading] = useState(false);
	const { data: session } = useSession();
	const [showUsernameInput, setShowUsernameInput] = useState(false);
	const email = session?.user.email;
	const name = session?.user.name;

	log.debug(email);
	const links = [
		{ id: "1", text: "Home", path: "/" },
		{ id: "2", text: "Profile", path: "/profile" },
	];

	useEffect(() => {
		setLoading(true);
		fetch("/api/friends", {
			body: JSON.stringify({ email }),
			method: "POST",
		}).then(async (res) => {
			if (email === undefined) return;
			setData(await res.json());
			setLoading(false);
		});
	}, [session, email, name]);

	useEffect(() => {
		fetch("/api/profileSetup", {
			body: JSON.stringify({ email, add: false }),
			method: "POST",
		}).then(async (res) => {
			var user = await res.json();
			log.debug(user);
			if (user.success === false) {
				setShowUsernameInput(true);
			}
		});
	}, [session, showUsernameInput, email]);

	const handleRequest = (e) => {
		console.log(e.target.value)
	}

	const onChange = (e) => {
		const query = e.target.value;
		log.debug(query);
	};

	log.debug(!isLoading);
	if (userFriends === null) return;
	log.debug(userFriends);
	return (
		<div>
			<Head>
				<title>Friends</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main>
				<Navbar links={links} />
				{showUsernameInput && (
					<UsernamePopup activate={showUsernameInput} />
				)}
				<h1 className="text-center text-nord_light-300 font-bold text-xl pt-10">
					{name}&#39;s Friends
				</h1>

				<div className="grid">
					<div className="grid place-items-center">
						<form>
							<input
								onChange={onChange}
								placeholder="Search"
								className="bg-nord_dark-200 outline-none rounded-lg text-nord_light-300 pt-2 pb-2 pl-4 pr-4 mt-4 mb-4"
							></input>
						</form>
					</div>
					<h1 className="text-nord_blue-300 font-bold text-2xl mb-4 ml-4">
						Requests
					</h1>

					<ol id="pending" className="w-auto mb-4 p-4">
						{userFriends.friends !== null &&
							showUsernameInput !== true &&
							userFriends.friends.Outgoing.map((users) => (
								<div className="mb-4 bg-nord_dark-200 rounded-lg">
									<li
										key={users.name}
										className="text-nord_light-300 p-3"
									>
										<div className="mb-2 mt-1">
											<button className="float-right ml-4 text-nord_dark-200 bg-nord_green pt-1 pb-1 pl-3 pr-3 rounded-lg">
												Accept
											</button>
										</div>
										<Link href={`/profile/${users.username}`} className="mb-1">{users.name}</Link>
									</li>
								</div>
							))}
					</ol>

					<h1 className="text-nord_blue-300 font-bold text-2xl mb-4 ml-4">
						Friends
					</h1>
					<ol id="friends" className="w-auto mb-4 p-4">
						{userFriends.friends !== null &&
							showUsernameInput !== true &&
							userFriends.friends.friends.map((users) => (
								<div className="mb-4 bg-nord_dark-200 rounded-lg">
									<li
										key={users.name}
										className="text-nord_light-300 p-3"
									>
										<div className="mb-2 mt-1">
											<button onClick={handleRequest} className="float-right ml-4 text-nord_light-300 bg-nord_red pt-1 pb-1 pl-3 pr-3 rounded-lg">
												Remove
											</button>
										</div>
										<Link href={`/profile/${users.username}`} className="mb-1">{users.name}</Link>
									</li>
								</div>
							))}
					</ol>
				</div>
			</main>
		</div>
	);
}
